version: '3'

volumes:
  bundle-store:
  pgsql-store:
  redis-store:

services:
  web:
    build:
      context: .
      dockerfile: ./infra/docker/nginx/Dockerfile
    ports:
      - target: 80
        published: ${WEB_PORT:-80}
        protocol: tcp
        mode: host

  app:
    build:
      context: .
      dockerfile: ./infra/docker/ruby/Dockerfile
    tty: true
    stdin_open: true
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - type: bind
        source: ./backend
        target: /work/backend
      - type: volume
        source: bundle-store
        target: /usr/local/bundle
    ports:
      - target: 3000
        published: ${WEB_PORT:-3000}
        protocol: tcp
        mode: host
    depends_on:
      - web
      - pgsql
      - rredis
      - rmail
    environment:
      - REDIS_URL=redis://redis:6379
      - DB_CONNECTION=pgsql
      - DB_HOST=pgsql
      - DB_PORT=5432
      - POSTGRES_USER=${DB_USER:-phper}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-secret}
      - POSTGRES_DB=${DB_NAME:-env_rails}

  pgsql:
    image: postgres:12.2-alpine
    hostname: pgsql
    ports:
      - target: 5432
        published: ${DB_PORT:-5432}
        protocol: tcp
        mode: host
    volumes:
      - type: volume
        source: pgsql-store
        target: /var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER:-phper}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-secret}
      POSTGRES_DB: ${DB_NAME:-env_rails}

  rredis:
    image: "redis:latest"
    container_name: rredis
    hostname: rredis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - type: volume
        source: redis-store
        target: /var/lib/redis/data

  rmail:
    image: mailhog/mailhog
    container_name: rmail
    hostname: mailhog
    ports:
      - 1025:1025
      - 8025:8025
